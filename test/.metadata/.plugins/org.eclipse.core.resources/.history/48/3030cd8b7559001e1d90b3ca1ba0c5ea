package br.connectementor.servlets;

import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import br.connectementor.dao.ConnectionFactory;
import br.connectementor.dao.UsuarioDAO;
import br.connectementor.entidades.Usuario;

@WebServlet("/inserirUsuario")
public class InserirUsuarioServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Obtenha os parâmetros do formulário
        String nome = request.getParameter("nome");
        String email = request.getParameter("email");
        String senha = request.getParameter("senha");
        String telefone = request.getParameter("telefone");

        // Inicialize as variáveis para os campos numéricos
        int programacao = 0;
        int redes = 0;
        int ciberseguranca = 0;
        int businessIntelligence = 0;
        int gestaoTI = 0;
        int cloudComputing = 0;
        int devOps = 0;

        // Verifique se os parâmetros numéricos não estão vazios e converta para int
        if (request.getParameter("Programacao") != null && !request.getParameter("Programacao").isEmpty()) {
            programacao = Integer.parseInt(request.getParameter("Programacao"));
        }
        if (request.getParameter("Redes") != null && !request.getParameter("Redes").isEmpty()) {
            redes = Integer.parseInt(request.getParameter("Redes"));
        }
        if (request.getParameter("Ciberseguranca") != null && !request.getParameter("Ciberseguranca").isEmpty()) {
            ciberseguranca = Integer.parseInt(request.getParameter("Ciberseguranca"));
        }
        if (request.getParameter("Business_Intelligence") != null && !request.getParameter("Business_Intelligence").isEmpty()) {
            businessIntelligence = Integer.parseInt(request.getParameter("Business_Intelligence"));
        }
        if (request.getParameter("Gestao_TI") != null && !request.getParameter("Gestao_TI").isEmpty()) {
            gestaoTI = Integer.parseInt(request.getParameter("Gestao_TI"));
        }
        if (request.getParameter("Cloud_Computing") != null && !request.getParameter("Cloud_Computing").isEmpty()) {
            cloudComputing = Integer.parseInt(request.getParameter("Cloud_Computing"));
        }
        if (request.getParameter("DevOps") != null && !request.getParameter("DevOps").isEmpty()) {
            devOps = Integer.parseInt(request.getParameter("DevOps"));
        }

        // Crie um objeto Usuario com os dados do formulário
        Usuario usuario = new Usuario(0, nome, email, senha, telefone, programacao, redes, ciberseguranca,
                businessIntelligence, gestaoTI, cloudComputing, devOps);

        try (Connection connection = ConnectionFactory.getConnection()) {
            // Crie uma instância do UsuarioDAO e insira o usuário no banco de dados
            UsuarioDAO usuarioDAO = new UsuarioDAO(connection);
            usuarioDAO.inserirUsuario(usuario);

            // Redirecione para uma página de sucesso
            response.sendRedirect("sucesso.jsp");
        } catch (SQLException e) {
            // Em caso de erro, lance uma exceção ServletException
            throw new ServletException("Erro ao inserir usuário: " + e.getMessage());
        }
    }
}
